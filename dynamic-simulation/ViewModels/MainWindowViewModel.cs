using System;using System.Collections.Generic;using System.Globalization;using System.Threading;using System.Threading.Tasks;using ProductionLineSimulator;namespace dynamic_simulation.ViewModels{    public class MainWindowViewModel : ViewModelBase    {        ProductionLine productionLine = new ProductionLine();        public MainWindowViewModel()        {            Thread producerThread = new Thread(productionLine.RunProducer);            Thread firstWorkerThread = new Thread(productionLine.RunFirstWorker);            Thread secondWorkerThread = new Thread(productionLine.RunSecondWorker);            producerThread.Start();            firstWorkerThread.Start();            secondWorkerThread.Start();            Task.Factory.StartNew(productionLine.RunFirstWorker, TaskCreationOptions.LongRunning);            Task.Factory.StartNew(productionLine.RunSecondWorker, TaskCreationOptions.LongRunning);            // Ждем завершения работы            producerThread.Join();            productionLine.Stop();            firstWorkerThread.Join();            secondWorkerThread.Join();            // Выводим результаты            Console.WriteLine($"Обработано деталей: {productionLine.GetProcessedCount()}");            Console.WriteLine($"Отложено деталей: {productionLine.GetDeferredCount()}");            Console.WriteLine($"Среднее время обработки: {productionLine.GetAverageProcessingTime()} мс");            Console.ReadKey();        }    }}